{"version":3,"sources":["modules/alert.js"],"names":["angular","container","provider","element","this","defaults","backdrop","keyboard","show","duration","type","dismissable","$get","AlertFactory","$alert","options","$scope","config","extend","$timeout","hide","scope","directive","restrict","link","isDefined","key","falseValueRegExp","forEach","hasOwnProperty","title","attr","$observe","newValue","oldValue","$watch","isObject","bsAlert","alert","trigger","destroy","on","toggle","$on"],"mappings":"AAOA,YAEAA,SAOMC,OAAW,wBAAA,yBAAAC,SAAA,SAAA,WANf,GAOIC,GAASC,KAAAC,UACTC,UAAU,UACVC,YAAU,QACVC,YAAM,QAENC,UAAU,KACVC,YAAM,uBACNC,WAAAA,EAPFR,QAAS,KAUTC,UAAKQ,EAEHL,UAASM,EATXL,MAWQM,EAVRL,UAaQM,EAZRL,MAcII,EAbJH,aAgBWK,EAdbZ,MAAKQ,MAgBUI,SAAON,WAAeA,SAAAA,EAAAA,GAfnC,QAASG,GAAaI,GAmBlB,GAAIT,MACAO,EAAQN,QAAUS,UAAAb,EAAAY,EAjBxBH,GAkBWN,EAAOO,GAjBlBD,EAkBMN,OAAAA,cAAAA,EAAAA,YACAW,EAAAA,OAjBJL,EAkBMA,OAAOM,KAAAA,EAAAA,KAhBf,IAAIZ,GAAOM,EAAON,IAmClBa,OAlCIN,GAAQN,WAoBVK,EAAOA,KAAAA,WAlBLN,IAsBJW,EAAON,WApBDC,EAAOM,QA0BN,IAAAL,EAAAN,YAIAK,EAxBT,MA4BQC,OA1BTO,UA0BkCnB,WAASA,UAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,GAzB5C,OACEoB,SAAU,MACVF,OAwBIrB,EAvBJwB,KAwBM,SAAYC,EAAeC,EAAOX,EAAQW,GAvB9C,GAAIX,IA2BFM,MAAIM,EACJ3B,QAAQ4B,EACNpB,MAAIR,EAKNA,SAAKqB,SAAMQ,WAAe,cAAU,aAAA,eAAA,YAAA,WAAA,OAAA,YAAA,YAAA,WAAA,eAAA,SAAAH,GAClCL,QAAMS,UAAQC,EAAAL,MAAAX,EAAAW,GAAAK,EAAAL,KAIhB1B,IAAAA,GAAiB,eA9BnBA,SA+BQ+B,SAAW,WAAA,OAAA,YAAA,eAAA,SAAAL,GACbK,QAAKC,UAAcD,EAAAL,KAAUO,EAAUC,KAAAA,EAAAA,MAAAA,EAAAA,IAAAA,KA7BxCb,EAAMQ,eAAe,WACxBR,EAAMS,MAAQ,IAmCd9B,QAAI+B,SAAc,QAAA,UAAA,QAAA,SAAAL,GAChBL,EAAMc,IACJJ,EAAI/B,SAAQoC,EAAAA,SAASH,EAAWC,GAC9BlC,EAAAA,GAAQkB,EAAOG,YAAOY,OA7B1BF,EAiCGM,SAhCLhB,EAAMc,OAAOJ,EAAKM,QAAS,SAASJ,EAAUC,GAoC1CI,QAAQxB,SAAOC,GAGnBZ,QAAW4B,OAAKQ,EAAWN,GAIrBK,EAAAA,QAAaE,IAEjBF,EArCJ,IAAIA,GAAQxB,EAAOC,EACnBZ,GAAQsC,GAAGV,EAAKQ,SAAW,QAASD,EAAMI,QAC1CrB,EAAMsB,IAAI,WAAY,WAChBL,GAAOA,EAAME,UACjBzB,EAAU,KACVuB,EAAQ","file":"modules/alert.min.js","sourcesContent":["'use strict';\r\n\r\n// @BUG: following snippet won't compile correctly\r\n// @TODO: submit issue to core\r\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\r\n\r\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\r\n\r\n  .provider('$alert', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'alert',\r\n      prefixEvent: 'alert',\r\n      placement: null,\r\n      templateUrl: 'alert/alert.tpl.html',\r\n      container: false,\r\n      element: null,\r\n      backdrop: false,\r\n      keyboard: true,\r\n      show: true,\r\n      // Specific options\r\n      duration: false,\r\n      type: false,\r\n      dismissable: true\r\n    };\r\n\r\n    this.$get = function ($modal, $timeout) {\r\n\r\n      function AlertFactory (config) {\r\n\r\n        var $alert = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $alert = $modal(options);\r\n\r\n        // Support scope as string options [/*title, content, */ type, dismissable]\r\n        $alert.$scope.dismissable = !!options.dismissable;\r\n        if (options.type) {\r\n          $alert.$scope.type = options.type;\r\n        }\r\n\r\n        // Support auto-close duration\r\n        var show = $alert.show;\r\n        if (options.duration) {\r\n          $alert.show = function () {\r\n            show();\r\n            $timeout(function () {\r\n              $alert.hide();\r\n            }, options.duration * 1000);\r\n          };\r\n        }\r\n\r\n        return $alert;\r\n\r\n      }\r\n\r\n      return AlertFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsAlert', function ($window, $sce, $alert) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink (scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['keyboard', 'html', 'container', 'dismissable'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // overwrite inherited title value when no value specified\r\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\r\n        if (!scope.hasOwnProperty('title')) {\r\n          scope.title = '';\r\n        }\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content', 'type'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsAlert) {\r\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Initialize alert\r\n        var alert = $alert(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', alert.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (alert) alert.destroy();\r\n          options = null;\r\n          alert = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}