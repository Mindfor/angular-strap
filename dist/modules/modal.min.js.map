{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","enterAnimateCallback","scope","$emit","options","prefixEvent","$modal","toggle","$isShown","hide","animation","unbindBackdropEvents","modalElement","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","focus","evt","preventDefault","modalScope","$destroy","$element","$options","extend","key","promise","isString","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","trustAsHtml","left","bottom","right","prefixClass","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","z-index","backdropBaseZindex","link","clonedElement","addClass","customClass","display","findElement","$animate","enter","minor","backdropAnimation","el","then","safeDigest","bindBackdropEvents","version","leave","defaultPrevented","leaveAnimateCallback","removeClass","unbindKeyboardEvents","which","directive","$root","$$phase","$window","restrict","query","document","querySelectorAll","lg","sm","setTimeout","body","isDefined","falseValueRegExp","test","modalClass","$watch","isObject","newValue","oldValue","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      templateUrl: 'modal/modal.tpl.html',\r\n      template: '',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true,\r\n      size: null\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n\r\n      var backdropCount = 0;\r\n      var dialogBaseZindex = 1050;\r\n      var backdropBaseZindex = 1040;\r\n\r\n      var validSizes = {\r\n        lg: 'modal-lg',\r\n        sm: 'modal-sm'\r\n      };\r\n\r\n      function ModalFactory (config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n        var promise = $modal.$promise = $bsCompiler.compile(options);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        if (!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        // Store $id to identify the triggering element in events\r\n        // give priority to options.id, otherwise, try to use\r\n        // element id if defined\r\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\r\n\r\n        // Support scope as string options or direct object\r\n        forEach([ 'title', 'content' ], function(key) {\r\n          if (options[key])\r\n               scope[key] = angular.isString(options[key]) ? $sce.trustAsHtml(options[key]) : options[key];\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n        // Publish isShown as a protected var on scope\r\n        $modal.$isShown = scope.$isShown = false;\r\n\r\n        // Fetch, compile then initialize modal\r\n        var compileData;\r\n        var modalElement;\r\n        var modalScope;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\r\n        promise.then(function (data) {\r\n          compileData = data;\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function () {\r\n\r\n          // Options: show\r\n          if (options.show) {\r\n            scope.$$postDigest(function () {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function () {\r\n\r\n          // Remove element\r\n          destroyModalElement();\r\n\r\n          // remove backdrop element\r\n          if (backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n        };\r\n\r\n        $modal.show = function () {\r\n          if ($modal.$isShown) return;\r\n\r\n          var parent;\r\n          var after;\r\n          if (angular.isElement(options.container)) {\r\n            parent = options.container;\r\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\r\n          } else {\r\n            if (options.container) {\r\n              parent = findElement(options.container);\r\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\r\n            } else {\r\n              parent = null;\r\n              after = options.element;\r\n            }\r\n          }\r\n\r\n          // destroy any existing modal elements\r\n          if (modalElement) destroyModalElement();\r\n\r\n          // create a new scope, so we can destroy it and all child scopes\r\n          // when destroying the modal element\r\n          modalScope = $modal.$scope.$new();\r\n          // Fetch a cloned element linked from template (noop callback is required)\r\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\r\n\r\n          if (options.backdrop) {\r\n            // set z-index\r\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\r\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\r\n\r\n            // increment number of backdrops\r\n            backdropCount++;\r\n          }\r\n\r\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({display: 'block'}).addClass(options.placement);\r\n\r\n          // Options: customClass\r\n          if (options.customClass) {\r\n            modalElement.addClass(options.customClass);\r\n          }\r\n\r\n          // Options: size\r\n          if (options.size && validSizes[options.size]) {\r\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\r\n          }\r\n\r\n          // Options: animation\r\n          if (options.animation) {\r\n            if (options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          } else {\r\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\r\n          }\r\n\r\n          $modal.$isShown = scope.$isShown = true;\r\n          safeDigest(scope);\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function () {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n          if (options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          bindBackdropEvents();\r\n          bindKeyboardEvents();\r\n        };\r\n\r\n        function enterAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n        }\r\n\r\n        $modal.hide = function () {\r\n          if (!$modal.$isShown) return;\r\n\r\n          if (options.backdrop) {\r\n            // decrement number of modals\r\n            backdropCount--;\r\n          }\r\n\r\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.leave(modalElement, leaveAnimateCallback);\r\n          } else {\r\n            $animate.leave(modalElement).then(leaveAnimateCallback);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            $animate.leave(backdropElement);\r\n          }\r\n          $modal.$isShown = scope.$isShown = false;\r\n          safeDigest(scope);\r\n\r\n          // Unbind events\r\n          unbindBackdropEvents();\r\n          unbindKeyboardEvents();\r\n        };\r\n\r\n        function leaveAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          bodyElement.removeClass(options.prefixClass + '-open');\r\n          if (options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function () {\r\n          if ($modal.$isShown) {\r\n            $modal.hide();\r\n          } else {\r\n            $modal.show();\r\n          }\r\n        };\r\n\r\n        $modal.focus = function () {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function (evt) {\r\n\r\n          if (evt.which === 27 && $modal.$isShown) {\r\n            $modal.hide();\r\n            evt.stopPropagation();\r\n          }\r\n\r\n        };\r\n\r\n        function bindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function unbindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function bindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n          }\r\n        }\r\n\r\n        function unbindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n          }\r\n        }\r\n\r\n        // Private helpers\r\n\r\n        function hideOnBackdropClick (evt) {\r\n          if (evt.target !== evt.currentTarget) return;\r\n          if (options.backdrop === 'static') {\r\n            $modal.focus();\r\n          } else {\r\n            $modal.hide();\r\n          }\r\n        }\r\n\r\n        function preventEventDefault (evt) {\r\n          evt.preventDefault();\r\n        }\r\n\r\n        function destroyModalElement () {\r\n          if ($modal.$isShown && modalElement !== null) {\r\n            // un-bind events\r\n            unbindBackdropEvents();\r\n            unbindKeyboardEvents();\r\n          }\r\n\r\n          if (modalScope) {\r\n            modalScope.$destroy();\r\n            modalScope = null;\r\n          }\r\n\r\n          if (modalElement) {\r\n            modalElement.remove();\r\n            modalElement = $modal.$element = null;\r\n          }\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function safeDigest (scope) {\r\n        /* eslint-disable no-unused-expressions */\r\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n        /* eslint-enable no-unused-expressions */\r\n      }\r\n\r\n      function findElement (query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsModal', function ($window, $sce, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink (scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Options: alias modalClass to customClass\r\n        if (options.modalClass) {\r\n          options.customClass = options.modalClass;\r\n        }\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsModal) {\r\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}