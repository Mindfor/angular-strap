{"version":3,"sources":["modules/popover.js"],"names":["angular","templateUrl","provider","contentTemplate","defaults","trigger","keyboard","html","title","content","delay","autoClose","this","$get","options","$popover","PopoverFactory","element","config","$tooltip","restrict","directive","requestAnimationFrame","$window","link","scope","forEach","attr","falseValueRegExp","dataTarget","key","isDefined","target","test","$observe","newValue","oldValue","$sce","trustAsHtml","$watch","bsPopover","$applyPlacement","popover","extend","bsShow","isString","match","setViewport","$on","destroy"],"mappings":"AAOA,YAEAA,SAMMC,OAAAA,0BAAa,2BAAAC,SAAA,WAAA,WALjB,GAMIC,GAAAA,KAAiBC,UACjBC,UAAS,UACTC,YAAU,GACVC,WAAM,EACNC,QAAO,EACPC,UAAS,QACTC,YAAO,2BACPC,iBAAW,EALbN,QAAS,QAQTO,UAAKC,EAEHN,MAAA,EAPFC,MAUQM,GATRL,QAWQM,GAVRL,MAaQI,EAZRH,WAaMI,EAXRH,MAcMC,MAAOE,WAAAA,SAAAA,GAbX,QAASC,GAAeC,EAASC,GAiB/B,GAAAJ,GAAOE,QAAAA,UAAAA,EAAAA,GAfHD,EAAWI,EAASF,EAASH,EA0BjCM,OALHC,GAAUZ,UAELa,EAAAA,OAAAA,QAAwBC,EAAQD,SAGlCF,EAEAI,MAAMR,OApBTK,UAwBSP,aAAAA,UAAAA,OAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAvBV,GAAIQ,GAuBwBG,EAAAA,uBAAAA,EAAAA,UAtB5B,QACEL,SAsBYM,MArBZD,OAsBM,EArBND,KAAM,SAAkBC,EAAOR,EAASU,GAyBpC,GAAIC,GACJ5B,GACEyB,MAAIzB,EAINA,SAAI6B,SAAaZ,WAAa,cAAA,aAAA,eAAA,kBAAA,YAAA,YAAA,QAAA,UAAA,OAAA,YAAA,cAAA,YAAA,KAAA,cAAA,eAAA,SAAAa,GAC1B9B,QAAQ+B,UAAUF,EAAAA,MAAaf,EAAAgB,GAAAH,EAAAG,KAxBrC,IA0BMhB,GAAiB,eAzBvBd,SAAQ0B,SA0BG,OAAA,YAAA,aAAA,SAAAI,GACLhB,QAAQkB,UAASH,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,IAAAA,IAxBvB,IAAIA,GAAaZ,EAAQU,KAAK,cA6B5B3B,SAAQ0B,UAASG,KACXF,EAAWM,KAAAJ,GACbF,EAAKO,QAASJ,EA1BhBhB,EA4BQd,OAAQ+B,GAzBpB/B,QAAQ0B,SAAU,QAAS,WAAa,SAASI,GAC3CH,EAAKG,IACPH,EAAKO,SAASJ,EAAK,SAASK,EAAUC,GACpCX,EAAMK,GAAOO,EAAKC,YAAYH,GAC1BnC,QAAQ+B,UAAUK,IA+BtBT,EAAgB,WACZY,GAAYC,EAAWC,wBAM3Bd,EAAI3B,WA7BRyB,EA8BMH,OAAAA,EAAAA,UAAsB,SAAAa,EAAAC,GACpBpC,QAAI0C,SAASA,GA7BjB1C,QAAQ2C,OAAOlB,EAAOU,GAgCrBV,EAAAhB,QAAA0B,EAIDR,QAAKiB,UAAQR,IACfX,EAA0B,WACnBiB,GAAY1C,EAAQ+B,sBA7B1B,GAEDJ,EAgCIe,QA/BNjB,EAAMc,OAAOZ,EAAKiB,OAAQ,SAAST,EAAUC,GACtCM,GAAY1C,QAAQ+B,UAAUI,KAC/BnC,QAAQ6C,SAASV,KAAWA,IAAaA,EAASW,MAAM,wBAmC1DnB,KAAe,EACjBF,EAAMc,OAEJG,EAAQK,UAQZtB,EAAMuB,UACJvB,EAAIiB,OAASA,EAAAA,SAAQO,SAAAA,GACrBnC,GAAUd,QAAA+B,UAAAI,IACVO,EAAUK,YAAAZ,KAnCdO,EAAU3B,EAASE,EAASH,GAC5BW,EAAMuB,IAAI,WAAY,WAChBN,GAASA,EAAQO,UACrBnC,EAAU,KACV4B,EAAU","file":"modules/popover.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$popover', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      customClass: '',\r\n      // uncommenting the next two lines will break backwards compatability\r\n      // prefixClass: 'popover',\r\n      // prefixEvent: 'popover',\r\n      container: false,\r\n      target: false,\r\n      placement: 'right',\r\n      templateUrl: 'popover/popover.tpl.html',\r\n      contentTemplate: false,\r\n      trigger: 'click',\r\n      keyboard: true,\r\n      html: false,\r\n      title: '',\r\n      content: '',\r\n      delay: 0,\r\n      autoClose: false\r\n    };\r\n\r\n    this.$get = function ($tooltip) {\r\n\r\n      function PopoverFactory (element, config) {\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        var $popover = $tooltip(element, options);\r\n\r\n        // Support scope as string options [/*title, */content]\r\n        if (options.content) {\r\n          $popover.$scope.content = options.content;\r\n        }\r\n\r\n        return $popover;\r\n\r\n      }\r\n\r\n      return PopoverFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsPopover', function ($window, $sce, $popover) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink (scope, element, attr) {\r\n\r\n        var popover;\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // should not parse target attribute (anchor tag), only data-target #1454\r\n        var dataTarget = element.attr('data-target');\r\n        if (angular.isDefined(dataTarget)) {\r\n          if (falseValueRegExp.test(dataTarget)) {\r\n            options.target = false;\r\n          } else {\r\n            options.target = dataTarget;\r\n          }\r\n        }\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n              if (angular.isDefined(oldValue)) {\r\n                requestAnimationFrame(function () {\r\n                  if (popover) popover.$applyPlacement();\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsPopover) {\r\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n            if (angular.isDefined(oldValue)) {\r\n              requestAnimationFrame(function () {\r\n                if (popover) popover.$applyPlacement();\r\n              });\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Visibility binding support\r\n        if (attr.bsShow) {\r\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\r\n            if (!popover || !angular.isDefined(newValue)) return;\r\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\r\n            if (newValue === true) {\r\n              popover.show();\r\n            } else {\r\n              popover.hide();\r\n            }\r\n          });\r\n        }\r\n\r\n        // Viewport support\r\n        if (attr.viewport) {\r\n          scope.$watch(attr.viewport, function (newValue) {\r\n            if (!popover || !angular.isDefined(newValue)) return;\r\n            popover.setViewport(newValue);\r\n          });\r\n        }\r\n\r\n        // Initialize popover\r\n        popover = $popover(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (popover) popover.destroy();\r\n          options = null;\r\n          popover = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}